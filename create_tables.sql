SET search_path TO hirid;
-- DROP TABLE IF EXISTS REFERENCE CASCADE;
CREATE TABLE REFERENCE
(
	source_table VARCHAR(20) NOT NULL,
	ID INT NOT NULL,
	variable_name VARCHAR(100) NOT NULL,
	unit VARCHAR(250),
	additional_information VARCHAR(20)
) ;


-- DROP TABLE IF EXISTS PATIENTS CASCADE;
CREATE TABLE PATIENTS
(
	patientid INTEGER NOT NULL,
	admissiontime TIMESTAMP NOT NULL,
	sex CHARACTER(1) NOT NULL,
	age INTEGER NOT NULL,
	discharge_status VARCHAR(10),
	CONSTRAINT patient_pkey PRIMARY KEY(patientid)
) ;




SET search_path TO HiRID;
-- DROP TABLE IF EXISTS OBSERVATIONS_TABLE CASCADE;
CREATE TABLE OBSERVATIONS_TABLE
(
	datetime TIMESTAMP NOT NULL,
	entertime TIMESTAMP NOT NULL,
	patientid INT NOT NULL,
	status INT,
	stringvalue VARCHAR(200),
	type VARCHAR(200),
	value DOUBLE PRECISION,
	variableid INT
) ;

-- 33905 patients
CREATE TABLE OBSERVATIONS_TABLE_1 ( CHECK ( patientid < 3390 )) INHERITS (OBSERVATIONS_TABLE);
CREATE TABLE OBSERVATIONS_TABLE_2 ( CHECK ( patientid >= 3390 AND patientid < 6781 )) INHERITS (OBSERVATIONS_TABLE);
CREATE TABLE OBSERVATIONS_TABLE_3 ( CHECK ( patientid >= 6781 AND patientid < 10171 )) INHERITS (OBSERVATIONS_TABLE);
CREATE TABLE OBSERVATIONS_TABLE_4 ( CHECK ( patientid >= 10171 AND patientid < 13562 )) INHERITS (OBSERVATIONS_TABLE);
CREATE TABLE OBSERVATIONS_TABLE_5 ( CHECK ( patientid >= 13562 AND patientid < 16952 )) INHERITS (OBSERVATIONS_TABLE);
CREATE TABLE OBSERVATIONS_TABLE_6 ( CHECK ( patientid >= 16952 AND patientid < 20343 )) INHERITS (OBSERVATIONS_TABLE);
CREATE TABLE OBSERVATIONS_TABLE_7 ( CHECK ( patientid >= 20343 AND patientid < 23733 )) INHERITS (OBSERVATIONS_TABLE);
CREATE TABLE OBSERVATIONS_TABLE_8 ( CHECK ( patientid >= 23733 AND patientid < 27124 )) INHERITS (OBSERVATIONS_TABLE);
CREATE TABLE OBSERVATIONS_TABLE_9 ( CHECK ( patientid >= 27124 AND patientid < 30514 )) INHERITS (OBSERVATIONS_TABLE);
CREATE TABLE OBSERVATIONS_TABLE_10 ( CHECK ( patientid >= 30514)) INHERITS (OBSERVATIONS_TABLE);


CREATE OR REPLACE FUNCTION OBSERVATIONS_TABLE_insert_trigger()
RETURNS TRIGGER AS $$
BEGIN
IF ( NEW.patientid < 3390 ) THEN INSERT INTO OBSERVATIONS_TABLE_1 VALUES (NEW.*);
ELSIF ( NEW.patientid >= 3390 AND NEW.patientid < 6781 ) THEN INSERT INTO OBSERVATIONS_TABLE_2 VALUES (NEW.*);
ELSIF ( NEW.patientid >= 6781 AND NEW.patientid < 10171 ) THEN INSERT INTO OBSERVATIONS_TABLE_3 VALUES (NEW.*);
ELSIF ( NEW.patientid >= 10171 AND NEW.patientid < 13562 ) THEN INSERT INTO OBSERVATIONS_TABLE_4 VALUES (NEW.*);
ELSIF ( NEW.patientid >= 13562 AND NEW.patientid < 16952 ) THEN INSERT INTO OBSERVATIONS_TABLE_5 VALUES (NEW.*);
ELSIF ( NEW.patientid >= 16952 AND NEW.patientid < 20343 ) THEN INSERT INTO OBSERVATIONS_TABLE_6 VALUES (NEW.*);
ELSIF ( NEW.patientid >= 20343 AND NEW.patientid < 23733) THEN INSERT INTO OBSERVATIONS_TABLE_7 VALUES (NEW.*);
ELSIF ( NEW.patientid >= 23733 AND NEW.patientid < 27124 ) THEN INSERT INTO OBSERVATIONS_TABLE_8 VALUES (NEW.*);
ELSIF ( NEW.patientid >= 27124 AND NEW.patientid < 30514 ) THEN INSERT INTO OBSERVATIONS_TABLE_9 VALUES (NEW.*);
ELSIF ( NEW.patientid >= 30514 ) THEN INSERT INTO OBSERVATIONS_TABLE_10 VALUES (NEW.*);
ELSE
	INSERT INTO OBSERVATIONS_TABLE_null VALUES (NEW.*);
END IF;
RETURN NULL;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER insert_OBSERVATIONS_TABLE_trigger
    BEFORE INSERT ON OBSERVATIONS_TABLE
    FOR EACH ROW EXECUTE PROCEDURE OBSERVATIONS_TABLE_insert_trigger();

-- DROP TABLE IF EXISTS PHARMA_RECORDS CASCADE;
CREATE TABLE PHARMA_RECORDS
(
	patientid INT NOT NULL,
	pharmaid INT NOT NULL,
	givenat TIMESTAMP,
	enteredentryat TIMESTAMP,
	givendose DOUBLE PRECISION,
	cumulativedose DOUBLE PRECISION,
	fluidamount_calc DOUBLE PRECISION,
	cumulfluidamount_calc DOUBLE PRECISION,
	doseunit VARCHAR(30),
	route VARCHAR(10),
	infusionid INT,
	typeid INT,
	subtypeid DOUBLE PRECISION,
	recordstatus INT
) ;
